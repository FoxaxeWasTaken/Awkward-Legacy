services:
  client-dev:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - VITE_API_URL=${VITE_API_URL:-http://server-dev:8000}
    volumes:
      - ./client/:/app
      - /app/node_modules
    command: ["npm", "run", "dev"]
    networks:
      - app-network
  
  server-dev:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_DEV_URL:-postgresql://genealogy_user:genealogy_password@postgres-dev:5432/genealogy_db}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:5173,http://localhost:3000,http://client-prod:5173,http://localhost:80}
    volumes:
      - ./server/src:/app/src
      - ./server/tests:/app/tests
      - /app/node_modules
    depends_on:
      postgres-dev:
        condition: service_healthy
    networks:
      - app-network

  postgres-dev:
    image: postgres:16.10-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-genealogy_db}
      - POSTGRES_USER=${POSTGRES_USER:-genealogy_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-genealogy_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-genealogy_user} -d ${POSTGRES_DB:-genealogy_db}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_dev_data: